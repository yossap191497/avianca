
-- Yohana cano hernandez
-- Victor Galvis Zuleta
-- Yerson Ossa Patiño 


-- a) Los directores de tecnología desean saber el estado de un avión, los posibles estados son (Vuelo, Tierra, Mantenimiento,
--    Reparación), para esto se pide agregar una nueva columna enla tabla donde se almacena la información de los aviones

-- b) También desean conocer el aeropuerto dónde se encuentra actualmente, si el avión está en vuelo debe registrarse el 
--    aeropuerto desde donde despegó y cuando aterriza, se actualiza esta información. Si el avión está en mantenimiento
--    o en reparación debe registrar el aeropuerto donde se esté realizando esa operación (Usualmente El Dorado)

CREATE TABLE AVIONES 
( 
  ID INTEGER NOT NULL PRIMARY KEY
, MATRICULA VARCHAR2(255) NOT NULL
, ESTADO VARCHAR2(255) NOT NULL CHECK (ESTADO IN('VUELO', 'TIERRA', 'MANTENIMIENTO', 'REPARACIÓN'))
, SERIAL VARCHAR2(255) NOT NULL 
, EDAD VARCHAR2(255) NOT NULL 
, MODELO VARCHAR2(255) NOT NULL 
, MARCA VARCHAR2(255) NOT NULL CHECK (MARCA IN ('AIRBUS', 'ATR', 'BOEING', 'EMBRAER'))
, NUMERO_ASIENTOS_EJECUTIVA INTEGER NOT NULL
, NUMERO_ASIENTOS_ECONOMICA INTEGER NOT NULL
, AEROPUERTO_ID INTEGER NOT NULL CONSTRAINT FK_AVION_AEROPUERTO REFERENCES AEROPUERTOS(ID) 
);

SELECT * FROM AVIONES;

-- c) Asimismo se desea conocer el estado de los vuelos confirmados, los posibles estados son (en vuelo, cancelado, retrasado, confirmado, 
--    abordando, programado).

CREATE TABLE VUELOS 
(
  ID INTEGER PRIMARY KEY NOT NULL 
, FECHA_HORA_ESTIMADA_SALIDA TIMESTAMP NOT NULL 
, FECHA_HORA_ESTIMADA_LLEGADA TIMESTAMP NOT NULL 
, FECHA_HORA_REAL_SALIDA TIMESTAMP NOT NULL 
, FECHA_HORA_REAL_LLEGADA TIMESTAMP NOT NULL 
, DURACION_REAL TIMESTAMP NOT NULL 
, ESTADO VARCHAR(255) CHECK (ESTADO IN('EN VUELO', 'CANCELADO', 'RETRASADO','CONFIRMADO', 'ABORDANDO', 'PROGRAMADO'))
, CANTIDAD_PASAJEROS_EJECUTIVA INTEGER NOT NULL
, CANTIDAD_PASAJEROS_ECONOMICA INTEGER NOT NULL
, CONFIRMACION_VUELO NUMBER(1) NOT NULL CHECK(CONFIRMACION_VUELO IN (0, 1))
, PILOTO_COPILOTO_ID INTEGER NOT NULL CONSTRAINT FK_VUELO_PILOTO_COPILOTO REFERENCES PILOTOS(ID)
, PILOTO_ID INTEGER NOT NULL CONSTRAINT FK_VUELO_PILOTO REFERENCES PILOTOS(ID)
, AVION_ID INTEGER NOT NULL CONSTRAINT FK_VUELO_AVION REFERENCES AVIONES(ID)
, PROGRAMACION_ID INTEGER NOT NULL CONSTRAINT FK_VUELO_PROGRAMACION REFERENCES PROGRAMACIONES(ID)
);

SELECT * FROM VUELOS;

-- 1) Se desea asignar un avión a un vuelo confirmado, para esto es necesario una vista que dado el id de un vuelo confirmado,
--    busque los aviones que se encuentran en el aeropuerto de salida (Utilizando la hora estimada de llegada a esa 
--    ciudad / aeropuerto de otros vuelos) 2 horas antes de la fecha estimada de salida.

CREATE OR REPLACE VIEW AEROPUERTOS_DEL_VUELO AS
SELECT V.ID, V.FECHA_HORA_ESTIMADA_SALIDA AS SALIDA, R.AEROPUERTO_DESTINO_ID, R.AEROPUERTO_ORIGEN_ID
    FROM VUELOS V
        INNER JOIN PROGRAMACIONES P ON V.PROGRAMACION_ID = P.ID
        INNER JOIN RUTAS R ON P.RUTA_ID = R.ID
        WHERE V.ESTADO = 'PROGRAMADO'
        ORDER BY SALIDA;

CREATE OR REPLACE VIEW DISPONIBILIDAD_AVIONES AS
SELECT VU.ID AS VUELO_ID, AV.ID, (AV.NUMERO_ASIENTOS_ECONOMICA + AV.NUMERO_ASIENTOS_EJECUTIVA) AS NUMERO_ASIENTOS,
	AV.MATRICULA, AV.ESTADO, VU.FECHA_HORA_ESTIMADA_LLEGADA, V.SALIDA AS SALIDA_VUELO_CONFIRMADO,
(V.SALIDA + INTERVAL '-2' HOUR ) AS RESTA, V.ID AS VUELO_PROGRAMADO
    FROM VUELOS VU
        INNER JOIN PROGRAMACIONES PR On VU.Programacion_Id = PR.ID
        INNER JOIN RUTAS RU On PR.RUTA_ID = RU.ID
        INNER JOIN AVIONES AV  ON AV.ID = VU.AVION_ID
        INNER JOIN AEROPUERTOS_DEL_VUELO V ON RU.AEROPUERTO_DESTINO_ID = V.AEROPUERTO_ORIGEN_ID
        WHERE  VU.FECHA_HORA_ESTIMADA_LLEGADA < (V.SALIDA + INTERVAL '-2' HOUR ) AND VU.ESTADO = 'EN VUELO';
        
-- * IMPLEMENTACIÓN DE LA VISTA QUE DEVUELVE LOS AVIONES QUE PUEDEN SER ASIGNADOS A UN VUELO
SELECT * FROM DISPONIBILIDAD_AVIONES 
WHERE VUELO_PROGRAMADO = 28;
